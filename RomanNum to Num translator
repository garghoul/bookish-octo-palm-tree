#include <iostream>
#include <string>
#include <vector>
using namespace std;

int main() {
    char choice;
    string input;
    int i;
    string numtoStr;
    int j;
    vector<char> romNum;
    vector<int> rnStr;
    int romTotal = 0;
    int numtoTrans;
    int digitNum = 0;
    vector<int> numVec;
    int numtoDig;
    
    cout << "Press 'r' or 'R' to translate roman numerals to numbers or press 'n' or 'N'  to translate numbers to roman numerals." << endl;
    cin >> choice;
    
    if (choice == 'n' | choice == 'N') {
        cout << "What is the number?" << endl;
        
        cin >> numtoTrans;
        numtoDig = numtoTrans;
        
        digitNum = 0;
        while ( numtoDig > 0 ) {
            digitNum++;
            numtoDig = numtoDig /10;
        }
        
        if (digitNum == 2) {
            
        }
         
        

        if (digitNum == 1) {
            if (numtoTrans <= 3)
                for (j = 0; j < numtoTrans; j++) {
                    cout << "i";
                }
            if (numtoTrans == 4) {
                cout << "iv";
            }
            if (numtoTrans == 5) {
                cout << "v";
            }
            if (numtoTrans > 5 && numtoTrans < 9) {
                cout << "v";
                for (j = 0; j < (numtoTrans - 5); j++) {
                    cout << "i";
                }
            }
            if (numtoTrans == 9) {
                cout << "ix";
            }
        }
        cout << endl;
    }
    
    if ( choice == 'r' | choice == 'R') {
    cout << "What are the all roman numerals you found (any letters not I,i,V,v,X,x,L,l,C,c,D,d,M, or m will be ignored)?" << endl;
    cin >> input;
    
    copy (input.begin(), input.end(), back_inserter(romNum));
    
    for (i = 0; i < romNum.size(); i++) {
        if (romNum[i] == 'i' | romNum[i] =='I' ) {
            if ( romNum[i+1] == 'l' | romNum[i+1] =='L' | romNum[i+1] =='c' | romNum[i+1] =='C' | romNum[i+1] =='d' | romNum[i+1] =='D' | romNum[i+1] =='m' | romNum[i+1] =='M') {
                cout << input << endl;
                cout << "Unusable set of Roman Numerals (I/i cannot precede L/l, C/c, D/d, or M/m" << endl;
                return 0;
            }
        }
        if (romNum[i] == 'v' | romNum[i] =='V' ) {
            if ( romNum[i+1] =='c' | romNum[i+1] =='C' | romNum[i+1] =='d' | romNum[i+1] =='D' | romNum[i+1] =='m' | romNum[i+1] =='M') {
                cout << input << endl;
                cout << "Unusable set of Roman Numerals (V/v cannot precede C/c, D/d, or M/m" << endl;
                return 0;
            }
        }
        if (romNum[i] == 'x' | romNum[i] =='X' ) {
            if ( romNum[i+1] =='d' | romNum[i+1] =='D' | romNum[i+1] =='m' | romNum[i+1] =='M') {
                cout << input << endl;
                cout << "Unusable set of Roman Numerals (X/x cannot precede D/d or M/m" << endl;
                return 0;
            }
        }
        if (romNum[i] == 'l' | romNum[i] =='L' ) {
            if ( romNum[i+1] =='m' | romNum[i+1] =='M') {
                cout << input << endl;
                cout << "Unusable set of Roman Numerals (X/x cannot precede D/d or M/m" << endl;
                return 0;
            }
        }

    }
    
    for (i = 0; i < romNum.size(); i++) {
        switch (romNum[i]) {
            case 'i':
            case 'I':
                rnStr.push_back(1);
                break;
            case 'v':
            case 'V':
                rnStr.push_back(5);
                break;
            case 'x':
            case 'X':
                rnStr.push_back(10);
                break;
            case 'l':
            case 'L':
                rnStr.push_back(50);
                break;
            case 'c':
            case 'C':
                rnStr.push_back(100);
                break;
            case 'd':
            case 'D':
                rnStr.push_back(500);
                break;
            case 'm':
            case 'M':
                rnStr.push_back(1000);
                break;
        }
    }
    
    /*for (i = 0; i < rnStr.size(); i++) {
        if ( rnStr[i] == 0) {
            rnStr.erase( rnStr.begin()+ i);
        }
    }*/
    
    for (i=0; i < rnStr.size(); i++){
        if (rnStr[i] < rnStr[i+1]) {
            rnStr[i] = rnStr[i] * -1;
        }
        if (i == rnStr.size()-1) {
            rnStr[i] = abs(rnStr[i]);
        }
        romTotal = romTotal + rnStr[i];
    }
    //cout << "romNum" << endl; maybe a corrected version if I have time
    cout << input << " = " << romTotal << endl;
    }

   return 0;
}
